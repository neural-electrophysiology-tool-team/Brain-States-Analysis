%% Figure 1:
% initiating stimTable and other essentials. 

SA=sleepAnalysis('/media/sil1/Data/Pogona Vitticeps/brainStatesWake.xlsx');
analysisFolder = '/media/sil1/Data/Nitzan/Light Manipulation paper/NitzanAnalysisFiles';
load([analysisFolder filesep 'stimTable.mat'])
% load([analysisFolder filesep 'LMdata.mat'])
animalsColors = [
    255/255, 142/255, 71/255;% HEX:  FF8E47 - orange  - PV126
    28/255, 144/255, 217/255;  % HEX: 1C90D9 - blue - PV149
    148/255, 120/255, 186/255; % HEX: 9478BA - perpule - PV157
    217/255, 62/255, 67/255; % HEX: D93E43 - red - PV159
    255/255, 202/255, 58/255; % HEX: FFCA3A - yellow -  PV161
    97/255, 184/255, 68/255;  % HEX:61B844 - Green -PV162
];
uniqueAnimals = unique(stimTable.Animal);
%% Figure 1 A, C, E
% parameters calculations for next plots:
% single traces from one night:

i = 22; % set the recording to PV161,N18
recName = ['Animal=' stimTable.Animal{i} ',recNames=' stimTable.recNames{i}];
SA.setCurrentRecording(recName);
DB = SA.getDelta2BetaRatio;

% stimulations timings:
t_ch = stimTable.StimTrighCh(i);
T=SA.getDigitalTriggers;
stims = T.tTrig{t_ch}; %all stim timings
stimStartT = stims(1);
stimEndT = stims(end);
firstTrig=stims(1:8:end-2);
endStim=stims(8:8:end)+200;
trial = reshape(stims,[8,length(stims)/8])';

pre=20000;
post=130000;
ch = 17;

%% Figure 1A
% plot trace from before stimulation:
p = 90*60*1000;
win = 180*1000;
tStart = firstTrig(1)-p+(870*1000);

pTmpC = find(DB.t_ms>(tStart) & DB.t_ms<(tStart+win));
dbTmpC = DB.bufferedDelta2BetaRatio(pTmpC);
[lfpC,lfp_tC] = SA.currentDataObj.getData(ch,tStart,win);
% plot:
f = figure;
set(f, 'Position', [100, 100, 600, 100]);
hold on
yyaxis left
plot(lfp_tC/1000,squeeze(lfpC),'k'); hold on;
ylabel('microvolts')
yyaxis right
plot(dbTmpC,'Color','b','LineWidth',2)
ylabel('\delta/\beta ')
hold off
xlabel('Time[s]')

ax = gca;
ax.YAxis(1).Color = 'k';
ax.YAxis(2).Color = 'blue';
ax.YAxis(1).Limits = [-500 500]; % Get left y-axis limits
ax.YAxis(2).Limits = [-800, 800];

%save figure:
set(f,'PaperPositionMode','auto');
fileName=[analysisFolder filesep 'cleanTraces'];
print(fileName,'-dpdf','-r300');

%% Figure 1C+E
% plot trace + raster:

j = 16; %trial number example:
pTmp=find(DB.t_ms>(firstTrig(j)-pre) & DB.t_ms<(firstTrig(j)+post));
dbTmp=DB.bufferedDelta2BetaRatio(pTmp);
[lfp,lfp_t] = SA.currentDataObj.getData(ch,firstTrig(j)-pre,pre+post);
    
% add a raster plot according to stimulation
% Load spike times and cluster IDs (adjust file names as needed)
curPhyFoler = [SA.currentDataObj.recordingDir filesep 'spikeSorting' filesep 'Kilosort4'];
spikes=load([curPhyFoler filesep 'spike_data.mat']);

spikeTimes_ms = spikes.spike_times/(SA.currentDataObj.samplingFrequency(ch)/1000); %spike times in ms. (get it from phy in samples)
spikeClusters = spikes.spike_clusters; % cluster ID per spike
cluster_info = readtable([curPhyFoler filesep 'cluster_info.tsv'], 'FileType', 'text', 'Delimiter', '\t');

% Parameters for the plot
allClusters  = cluster_info.cluster_id(find(contains(cluster_info.group,'good')|contains(cluster_info.group,'mua')));
goodClusters = cluster_info.cluster_id(find(contains(cluster_info.group,'good')));
nClusters = length(allClusters);
nClustersg = length(goodClusters);

% plot trace + raster:
f = figure;
h1 = subplot(2,1,1);
plot(lfp_t/1000,squeeze(lfp),'k'); hold on;
curstims = (trial(j,:) -trial(j,1)) +pre ;
xline(curstims/1000,'r','LineWidth',1.5)
plot(dbTmp,'Color','b','LineWidth',2)
sgtitle(sprintf('Trial num: %i',j));
hold off;


% Plot RASTER!! spikes for each cluster, for each trig time!
    h2 = subplot(2,1,2);
    hold on;
    for l = 1:nClusters
        clusterID = allClusters(l);
        
        clusterSpikeTimes = spikeTimes_ms(spikeClusters == clusterID); % times for this unit
        curClusterSpikeT_ms=clusterSpikeTimes(clusterSpikeTimes>(firstTrig(j)-pre) & clusterSpikeTimes<(firstTrig(j)+post));
        TClusterSpikeT_ms = (curClusterSpikeT_ms-(firstTrig(j)-pre));
        % Plot each spike as a tick at y = cluster number
        for k = 1:length(TClusterSpikeT_ms)
            line([TClusterSpikeT_ms(k), TClusterSpikeT_ms(k)], [l - 0.4, l + 0.4], 'Color', 'k'); % tick mark
        end
        
    end
    curstims = trial(j,:) -trial(j,1) +pre ;
   
    xline(curstims,'r','LineWidth',1.5)
    box on
    % Convert x-axis labels from ms to s by setting the x-axis ticks and labels
    xticks = get(gca, 'XTick');          % Get current x-axis tick values in ms
    set(gca, 'XTick', xticks);           % Set the same ticks
    set(gca, 'XTickLabel', xticks / 1000); % Display tick labels in seconds
    xlabel('Time (s)');
    % xlabel('Time (ms)');
    ylabel('Neuron/Unit');
    ylim([0.4,nClusters+0.5])
    title('Raster Plot');
    hold off;

% save figure:
set(f,'PaperPositionMode','auto');
fileName=[analysisFolder filesep 'singleTrialRasterPV161N18t16'];
print(fileName,'-depsc','-vector');

%% Figure 1D
i = 22;
recName = ['Animal=' stimTable.Animal{i} ',recNames=' stimTable.recNames{i}];
SA.setCurrentRecording(recName);
stimShamFile=[SA.currentAnalysisFolder filesep  'stimSham.mat'];
load(stimShamFile); %load data
    
trialsham = height(StimDBSham)-70+1;
    
colorLim=[0 600];
f=figure;
subplot(4,2,[1:2:6]);
imagesc(StimDBSham(trialsham:end,:),colorLim);
ylabel('Trial #');title('Sham');hold on;
set(gca,'XTick',[]);
cb=colorbar('Position',[0.47 0.76 0.013 0.17]);
ylabel(cb,'\delta/\beta');
line([pre/1000 pre/1000],ylim,'color','r');
subplot(4,2,7);plot(ts-pre/1000,mean(StimDBSham,'omitnan'));% plot me
xlabel(['Time [s]']);ylabel('Avg.');ylim(colorLim/3);
    line([0 0],ylim,'color','r');
    line([stimDuration/1000 stimDuration/1000],ylim,'color','r');
    subplot(4,2,[2:2:6]);imagesc(StimDB,colorLim);ylabel('Trial #');title('Stim');set(gca,'XTick',[]);
    cb=colorbar('Position',[ 0.91 0.76 0.013 0.17]);ylabel(cb,'\delta/\beta');
    line([pre/1000 pre/1000],ylim,'color','r');
    subplot(4,2,8);plot(ts-pre/1000,mean(StimDB,'omitnan'));xlabel(['Time [s]']);ylabel('Avg.');ylim(colorLim/3);
    line([0 0],ylim,'color','r');
    line([stimDuration/1000 stimDuration/1000],ylim,'color','r');

%   save?
    fileName=[SA.currentPlotFolder filesep 'stim_sham_activation.pdf'];
    saveas (f, fileName);

%% Figure 1F

% Plot Spike rates avrages for all nights:
    % 3 subplots: 1 unit, all units same night, all units
    % night for the single unit:
    i = 22;
    recName = ['Animal=' stimTable.Animal{i} ',recNames=' stimTable.recNames{i}];
    SA.setCurrentRecording(recName);
    curPhyFoler = [SA.currentDataObj.recordingDir filesep 'spikeSorting' filesep 'Kilosort4'];
    spikeRateFile = [curPhyFoler filesep 'spikeRateAll.mat'];
    load(spikeRateFile,"spikeRateAll","spikeRateT","allClusters","OL");
    % all nights, all units:
    allnightsfilename = [analysisFolder filesep 'allNightsSpikingRate.mat'];
    load(allnightsfilename,"AllNightsUnits","spikeRecs","xPositions")

unitMean = mean(spikeRateAll,3);
bestU = 48;
bestUind = find(allClusters==bestU);
% stimDiff = mean(mean(diff(trial,[],2)));
% xPositions = (pre + (0:7)*(stimDiff))/OL;  % Example positions for lines

f= figure;
%figrue1: one unit from 1 nights/
h1 = subplot(3,1,1);
plot(spikeRateT/OL,unitMean(bestUind,:),'Color','k', 'LineWidth',1)
hold on
xline(xPositions,'r','LineWidth',1)
ylabel('Spike/s')
title('one unit mean across all trials')
hold off

%figure 2: all units one night: 
h2=subplot(3,1,2);
meanOneNight = mean(unitMean,1);
n = height(unitMean);
title 'Mean all units - One Night')
plot(spikeRateT/OL,meanOneNight,'Color','k', 'LineWidth',1); hold on;
xline(xPositions,'r','LineWidth',1)
ylabel('Spike/s')
hold off
annotation('textbox', [0.8, 0.5, 0.03, 0.1], 'String', ...
    sprintf('n=%i',n), 'EdgeColor', 'none', 'HorizontalAlignment', ...
    'right', 'VerticalAlignment', 'middle');


%figure 3: all units - all nights
h3=subplot(3,1,3);
title('Mean all units, all Red Nights')
plot(spikeRateT/OL,mean(AllNightsUnits,1),'Color','k', 'LineWidth',1); hold on;
xline(xPositions,'r','LineWidth',1)
xlabel('Time[s]'); 
ylabel('Spike/s')
n= height(AllNightsUnits);
N = numel(spikeRecs);
annotation('textbox', [0.8, 0.2, 0.03, 0.1], 'String', ...
    sprintf('n=%i,N=%i',n,N), 'EdgeColor', 'none', 'HorizontalAlignment', ...
    'right', 'VerticalAlignment', 'middle');

% linkaxes([h1,h2,h3],'x')
%savefigure
set(f,'PaperPositionMode','auto');
fileName=[analysisFolder filesep 'spikeRates-allnights'];
print(fileName,'-dpdf',['-r' num2str(SA.figResJPG)]);

%% Figure 1G
% load data
ITIISImatfilename = [analysisFolder filesep 'ITIISIdata.mat'];
load(ITIISImatfilename, "ITIsamples", "ISIsamples","spikeRecs")


fall = figure;
subplot(1,2,1)
IIdata = [ITIsamples, ISIsamples];
plot([1,2] ,IIdata,'Color',[0.7 0.7 0.7],'Marker','.','MarkerSize',4);
hold on;
plot([1,2] ,mean(IIdata),'Color','k', 'LineWidth',2,'Marker','.','MarkerSize',4);
xticks([1,2]);xticklabels(["Before Stims", "After Stims"]);xlim([0.5 2.5])
% grid on;
ylabel('Spikes/S')
sgtitle ('all units')
n = length(IIdata); 
N= length(spikeRecs);

subplot(1,2,2)
diff= ITIsamples- ISIsamples; %ISI = after, ITI =before
x = [ones(length(IIdata),1)];
colors = [ 0.5 0.7 0.8];
swarmchart(x,diff,1,colors,'filled','XJitterWidth',0.8);
ylabel('Spikes/S')
xticks(1);xticklabels("Before-After");
xlim([0.5 1.5])
yline(0,'--','Color',[0.4 0.4 0.4])
percent = (sum(diff<0)/length(diff))*100; % how many units are bellow zero in percent
[pWilcoxon, ~, statsWilcoxon] = signrank(ITIsamples, ISIsamples);

annotation('textbox', [0.8, 0.85, 0.03, 0.1], 'String', ...
    sprintf('n=%i,N=%i',n,N), 'EdgeColor', 'none', 'HorizontalAlignment', ...
    'right', 'VerticalAlignment', 'middle');
annotation('textbox', [0.8, 0.7, 0.03, 0.1], 'String', ...
    sprintf('Wilcoxon p-val: %.4f\n', pWilcoxon), 'EdgeColor', 'none', 'HorizontalAlignment', ...
    'right', 'VerticalAlignment', 'middle');
% avefigures
    set(fall,'PaperPosition',[1 1 2.1 2]);
    fileName=[analysisFolder filesep 'ITIISIallunits'];
    print(fileName,'-dpdf',['-r' num2str(SA.figResJPG)]);

%% Figure 1H - stim sham all red nights:

wavelength = '635';
curTrials = contains(stimTable.Remarks,wavelength) & ...
    ~contains(stimTable.Remarks,'Ex') & ...
    all(~isnan(stimTable.dbDiffStimM), 2) &...
    all(~isnan(stimTable.dbDiffShamM), 2); 
    
n = sum(curTrials);
animals = unique(stimTable.Animal(curTrials));
N = length(animals);

% statistical tests for that figure 
groupSham = stimTable.dbDiffShamM(curTrials);
groupStim = stimTable.dbDiffStimM(curTrials);

% 1. Wilcoxon Signed-Rank Test
[pWilcoxon, ~, statsWilcoxon] = signrank(groupSham, groupStim);
fprintf('Wilcoxon Signed-Rank Test p-value: %.4f\n', pWilcoxon);
disp(statsWilcoxon)

% plot:
figure;
title('Change in mean D/B norm across trials - All nights')
x=[1,2];
curData = [stimTable.dbDiffShamM(curTrials), stimTable.dbDiffStimM(curTrials)];
% color code per animal:
[~, animalIndices] = ismember(stimTable.Animal(curTrials), uniqueAnimals);
curColorMat = animalsColors(animalIndices, :); % Use the indices to directly fetch corresponding colors
curMeanStim = mean(stimTable.dbDiffStimM(curTrials),1);
curMeanSham = mean(stimTable.dbDiffShamM(curTrials),1);
hold on
for i = 1:height(curData)
    plot(x, curData(i,:), 'Color',curColorMat(i,:), 'Marker','.', 'MarkerSize',10, 'LineWidth',1)
end
plot(x,[curMeanSham,curMeanStim],'color','k','LineWidth',2,'Marker','.','MarkerSize',10)
hold off


ylim([-40 120])
xlim([0.9 2.1]);
xticks([1, 2]); % Position of the x-ticks
xticklabels({'Sham', 'Stim'}); % Labels for the x-ticks

%save figure:
set(gcf,'PaperPosition',[1 4 1.2 1.6])
saveas (gcf, [analysisFolder filesep 'DBdiffStimShamRedNights.pdf']);

    
%% Figure 1I
% plot sliding AC sith stimulations: (bottom)
%set the recording:
i = 22; %night 18, PV161
recName = ['Animal=' stimTable.Animal{i} ',recNames=' stimTable.recNames{i}];
SA.setCurrentRecording(recName);
AC = SA.getDelta2BetaAC;
SA.plotDelta2BetaSlidingAC ('stim',1,'stimCh',stimTable.StimTrighCh(i));

% plot partial AC for each part of the night:
ACpre = stimTable.ACpre{i};
ACstim = stimTable.ACstim{i};
ACpost = stimTable.ACpost{i};

PDPcolors = [0.2, 0.6, 0.8; 0.9, 0.4, 0.3; 0.5, 0.8, 0.5];
ACstructs = {ACpre,ACstim,ACpost};
labels = {'preStim', 'Stim', 'postStim'};
for j = 1:3
    struct2vars(ACstructs{j});
    fAC = figure;
    %plot:
    lineHandles = plot(autocorrTimes/1000,real(xcf),'Color',PDPcolors(j,:),'LineWidth',4);
    ylim([-0.4 1])
    set(lineHandles(1),'MarkerSize',4);
    % grid('on');
    xlabel('Period [s]');
    ylabel('Auto corr.');
    hold('on');

    plot(period/1000,real(xcf(pPeriod)),'o','MarkerSize',5,'color','k');
    text(period/1000,0.05+real(xcf(pPeriod)),num2str(period/1000));

    a = axis;
   plot([a(1) a(2)],[0 0],'-k');
    hold('off');
    title (labels{j})
   % save fig:
   set(fAC,'PaperPositionMode','auto');
   fileName=[analysisFolder filesep 'dbAC_ch' num2str(parDbAutocorr.ch) '_t' num2str(round(parDbAutocorr.tStart)) labels{j}];
   print(fileName,'-dpdf',['-r' num2str(SA.figResJPG)]);

end

%% Figure 1J
% plot AC - only Red nights:
wavelength = '635';
curTrials = contains(stimTable.Remarks,wavelength) & ...
            ~contains(stimTable.Remarks,'Ex') & ...
            all(~isnan(stimTable.ACcomPer),2) &...
            all(stimTable.ACcomP2V > 0.15,2);
n = sum(curTrials);
N = length(unique(stimTable.Animal(curTrials)));

% statistical tests:
% first, we need to check the differences in genral, in Freidman test,
% which is a a-parametrical ANOVA test. then we can use wilcoxon post-hoc
% to check where is the differenc (with benforoni corection)

% Assuming data in columns where each row is a subject and each column is a timepoint
[p, tbl, stats] = friedman(stimTable.ACcomPer(curTrials,:), 1); % Here, 1 indicates within-subjects design
fprintf('p-value for freidman ANOVA test: %.5f\n',p)
% p-valure is very low, post hoc:
if p<0.05
    before = stimTable.ACcomPer(curTrials,1);
    during = stimTable.ACcomPer(curTrials,2);
    after = stimTable.ACcomPer(curTrials,3);

    % Pairwise Wilcoxon signed-rank tests
    [p_before_during, ~, stats_before_during] = signrank(before, during);
    [p_during_after, ~, stats_during_after] = signrank(during, after);
    [p_after_before, ~, stats_after_before] = signrank(after, before);

    raw_pvals = [p_before_during,p_during_after,p_after_before];
    num_comparisons = 3;
    % Display results with Bonferroni correction
    corrected_pvals_bonferroni = min(raw_pvals * num_comparisons, 1);
    fprintf('Wilcoxon signed-rank test results with Bonferroni correction:\n');
    fprintf('Before vs During: p-value = %.4f \n', corrected_pvals_bonferroni(1));
    fprintf('During vs After: p-value = %.4f\n', corrected_pvals_bonferroni(2));
    fprintf('After vs Before: p-value = %.4f\n ', corrected_pvals_bonferroni(3));
end

%plot
figure;
x = 1:3;
% color code per animal:
[~, animalIndices] = ismember(stimTable.Animal(curTrials), uniqueAnimals);
curColorMat = animalsColors(animalIndices, :); 
curMean = mean(stimTable.ACcomPer(curTrials,:)/1000,1);
curData = stimTable.ACcomPer(curTrials,:)/1000;
hold on
for i = 1:height(curData)
    plot(x, curData(i,:),'Color',curColorMat(i,:),'Marker','.','MarkerSize',10,'LineWidth',1)
end
plot(x, curMean,'Color','k','LineWidth',2)
xlim([0.75 3.25])
xticks(x)  % Set ticks after xlim to avoid automatic adjustment
xticklabels({'Pre', 'During', 'Post'})

ylim([50 200])
ylabel('Period Time[s]')
title ('Perios Times changes - all red nights')

% savefigure
set(gcf,'PaperPositionMode','auto')
saveas (gcf, [analysisFolder filesep 'ACperiodReds.pdf']);